<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mockvoting.domain.user.mapper.UserMapper">

    <!-- 사용자 등록 -->
    <insert id="insertUser" parameterType="com.example.mockvoting.domain.user.entity.User">
        INSERT INTO user (
            user_id, email, name, nickname,
            profile_img_url, role,
            created_at, active, is_election, has_received_token
        ) VALUES (
                     #{userId}, #{email}, #{name}, #{nickname},
                     #{profileImgUrl}, #{role},
                     #{createdAt}, #{active}, #{isElection}, #{hasReceivedToken}
                 )
    </insert>

    <!-- 사용자ID로 사용자 조회 -->
    <select id="findByUserId" resultType="com.example.mockvoting.domain.user.entity.User">
        SELECT
            id, user_id as userId, email, name,
            nickname, profile_img_url as profileImgUrl,
            role, created_at as createdAt, active,
            is_election as isElection, has_received_token as hasReceivedToken
        FROM user
        WHERE user_id = #{userId}
    </select>

    <!-- 이메일로 사용자 조회 -->
    <select id="findByEmail" resultType="com.example.mockvoting.domain.user.entity.User">
        SELECT
            id, user_id as userId, email, name,
            nickname, profile_img_url as profileImgUrl,
            role, created_at as createdAt, active,
            is_election as isElection, has_received_token as hasReceivedToken
        FROM user
        WHERE email = #{email}
    </select>

    <delete id="deleteUser">
        delete from user where user_id = #{userId}
    </delete>

    <!-- 사용자 정보 업데이트 -->
    <update id="updateUser" parameterType="com.example.mockvoting.domain.user.entity.User">
        UPDATE user
        SET
            name = #{name},
            nickname = #{nickname},
            profile_img_url = #{profileImgUrl}
        WHERE user_id = #{userId}
    </update>

    <!-- 사용자 투표 상태 업데이트 -->
    <update id="updateUserElectionStatus">
        UPDATE user
        SET is_election = #{isElection}
        WHERE user_id = #{userId}
    </update>

    <!-- 사용자 토큰 발급 상태 업데이트 (추가) -->
    <update id="updateUserTokenStatus">
        UPDATE user
        SET has_received_token = #{hasReceivedToken}
        WHERE user_id = #{userId}
    </update>

</mapper>